html {
    height: 100dvh;
    /* Ensure html element fills the dynamic viewport height */
    height: 100vh;
    overflow: hidden;
    /* Crucial: Prevent scrolling on the entire HTML document */
}

body {
    min-height: 100dvh;
    /* Ensure body also fills dynamic viewport height */
    min-height: 100vh;
    margin: 0;
    font-family: "Roboto", sans-serif;
    background-color: #8ED2C9;
    /* Your chosen background color */
    background-size: cover;
    background-attachment: fixed;
    overflow: hidden;
    /* CRITICAL: Prevent scrolling on the body element */
    /* No need for display: flex; flex-direction: column here if app-container is fixed */
}

.page-wrapper {
    /* Since app-container will be position: fixed, page-wrapper becomes less critical for layout */
    /* You might even be able to remove the .page-wrapper div from your HTML for simplicity */
    width: 100%;
    height: 100%;
    /* Still ensures it takes up available space if not removed */
}

.app-container {
    position: fixed;
    /* NEW: Fix the entire app container to the viewport */
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;

    display: flex;
    /* Keep flexbox for internal layout */
    flex-direction: column;
    /* Stack children vertically */
    z-index: 1;
    /* Ensure it's above any background elements */

    background-color: #8ED2C9;
    /* Apply background to this fixed container */
    border-radius: 0;
    overflow: hidden;
    /* Essential to clip content and prevent app-level scrollbars */
    box-shadow: none;
}

.chat-header {
    /* This element is now a child of a fixed flex container, so it behaves normally within that */
    flex-shrink: 0;
    /* Prevent header from shrinking if content is too large */
    display: flex;
    align-items: center;
    flex-direction: row;
    background-color: #347474;
    color: #FFFFFF;
    /* Use padding-top to push content down from the top edge, accounting for safe area */
    padding-top: max(25px, env(safe-area-inset-top));
    /* Generous padding to clear URL bar */
    padding-left: 10px;
    padding-right: 10px;
    padding-bottom: 10px;
    gap: 15px;
    line-height: 20px;
    border-radius: 0;
}

.logo {
    width: 80px;
}

.atom-status {
    font-weight: 400;
    margin-top: -10px;
}

.chat-box {
    flex-grow: 1;
    /* Crucial: takes all remaining vertical space */
    display: flex;
    flex-direction: column;
    padding: 20px;
    gap: 20px;
    overflow-y: auto;
    /* THIS IS THE ONLY ELEMENT THAT SHOULD SCROLL VERTICALLY */
}

.chat-box::-webkit-scrollbar {
    width: 10px;
}

.chat-box::-webkit-scrollbar-track {
    background: transparent;
}

.chat-box::-webkit-scrollbar-thumb {
    background-color: #085F63;
    border-radius: 5px;
    border: 2px solid #8ED2C9;
}

.atom-response {
    background-color: #347474;
    color: #FFFFFF;
    width: fit-content;
    padding: 20px;
    border-radius: 20px;
    align-self: flex-start;
    max-width: 75%;
    box-shadow: 2px 4px 16px rgba(0, 0, 0, 0.2);
    line-height: 26px;
    font-size: 18px;
}

.typing-indicator {
    background-color: #085F63;
    width: fit-content;
    padding: 20px;
    border-radius: 20px;
    align-self: flex-start;
    align-items: center;
    gap: 5px;
    order: 99;
}

.typing-indicator span {
    width: 10px;
    height: 10px;
    background-color: #8ED2C9;
    border-radius: 50%;
    animation: bounce 1.2s infinite ease-in-out;
}

.typing-indicator span:nth-of-type(2) {
    animation-delay: -1.0s;
}

.typing-indicator span:nth-of-type(3) {
    animation-delay: -0.8s;
}

@keyframes bounce {

    0%,
    80%,
    100% {
        transform: scale(0);
    }

    40% {
        transform: scale(1.0);
    }
}

.user-response {
    background-color: #FFFFFF;
    color: #062925;
    width: fit-content;
    padding: 20px;
    border-radius: 20px;
    align-self: flex-end;
    max-width: 75%;
    box-shadow: 2px 4px 16px rgba(0, 0, 0, 0.2);
    font-size: 18px;
}

form {
    display: flex;
    gap: 10px;
    align-items: center;
}

.input-container {
    /* This element is now a child of a fixed flex container, so it behaves normally within that */
    flex-shrink: 0;
    /* Prevent input container from shrinking */
    background-color: #FFBD59;
    padding-top: 15px;
    padding-left: 15px;
    padding-right: 15px;
    /* Use padding-bottom to push content up from the bottom edge, accounting for safe area */
    padding-bottom: max(15px, env(safe-area-inset-bottom));
}

.question-input {
    flex-grow: 1;
    border: none;
    border-radius: 30px;
    padding: 18px;
    background-color: #FFFFFF;
    color: #004548;
    font-size: 18px;
}

.question-input:focus {
    outline-color: #085F63;
}

.question-input::placeholder {
    color: #39989D;
    font-size: 18px;
}

.send-button {
    background: none;
    border: none;
    cursor: pointer;
    padding: 0;
}

.send-button img {
    width: 55px;
}